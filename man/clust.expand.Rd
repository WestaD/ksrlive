% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/ksrlive.R
\name{clust.expand}
\alias{clust.expand}
\title{Integrate exclusive and complete clustering results}
\usage{
clust.expand(kin_clust, kin_clust_all, thre = 0.95,
  index = 1:length(kin_clust[[1]]), diff_list = NULL)
}
\arguments{
\item{kin_clust}{list of kinase substrate relationships with only exclusive
substrates}

\item{kin_clust_all}{list of all available kinase substrate relationships}

\item{thre}{threshold of au value for clustering, for example au = 0.95
corresponds to a pvalue of 0.05}

\item{index}{numeric vector of indices to perform the integration for}

\item{diff_list}{character vector of names of differentially regulated
substrates}
}
\value{
expand_clust_list integrated clustering assignments

noclust numeric vector of indices where a cluster could not be
determined
}
\description{
\code{clust.expand} returns a list of clustering assignments
}
\details{
The function clust.expand takes two objects created by kinclust, one
clustered using exclusive substrates and the other one all substrates and
expands the core found by clustering exclusive substrates using a pvalue
threshold. The core sites can be tested for differential regulation if a list
of differentially regulated sites is included (recommended).
}
\examples{
data(phosphonetwork)
data(datalist)
# create identifier for substrate in database
test_db <- do.call(paste,
                   c(phosphonetwork.df[ ,c("SUB_ACC_ID.human", "MODSITE_SEQ.human")],
                     sep = "_"))
test_db <- data.frame(substrate = test_db,
                      kinase = phosphonetwork.df[ ,"KIN_ACC_ID.human"],
                      stringsAsFactors = FALSE)

# create identifier for substrate in data
nam_map <- do.call(paste,
                   c(data_kin[, c("Uniprot.human", "Motif.human")], sep = "_"))
ind_map <- match(test_db[ ,"substrate"], nam_map)
test_db <- data.frame(test_db, data_name = rownames(data_kin)[ind_map],
                      stringsAsFactors = FALSE)

# first column has to be substrate id, second kinase id
kin_data <- KSR.list(test_db[, c(3, 2)])
# Akt1 and Akt2 belong to the same kinase family, combine their substrates
# into one list and name the list after the first family member
fam <- list(akt = c("P31749", "P31751"))
kin_data_fam <- KSR.list(test_db[, c(3, 2)], kinasefamilies = fam)

# only include phosphosites appearing once
kin_data_fam_exc <- KSR.list(test_db[, c(3, 2)], kinasefamilies = fam,
                             exclusive = TRUE)

scaled_ind <- grep("scaled", colnames(data_kin))

# clustering using exclusive substrates
kin_clust <- kinclust(data = data_kin[ , scaled_ind],
                      kin_list = kin_data_fam_exc,
                      nboot = 100,
                      method.dist = "euclidean",
                      method.hclust = "average")

# clustering using all substrates
kin_clust_all <- kinclust(data = data_kin[ , scaled_ind],
                          kin_list = kin_data_fam,
                          nboot = 100,
                          method.dist = "euclidean",
                          method.hclust = "average")

expand_all_list <- clust.expand(kin_clust, kin_clust_all)
expand_all <- expand_all_list$expand_clust_list
}

